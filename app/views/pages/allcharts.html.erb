<script type="text/javascript">
	function onSelected(fromTime, toTime) {
	}


	$(document).ready(function() {

		function parseExcelDate(dateStr) {
			var millisecondsInADay = (24 * 60 * 60 * 1000);
			var decimalNum = parseFloat(dateStr);
			var numDaysToAdd = (Math.floor(decimalNum) - 25569) * millisecondsInADay;
			var numMillisecondsToAdd = decimalNum % 1 * millisecondsInADay;
			return numDaysToAdd + numMillisecondsToAdd;
		}

		var bgChart;

		var options = {
			chart : {
				borderRadius : 0,
				zoomType : '',
				alignTicks : false,
				events : {
					selection : function(event) {

						if(event.xAxis) {
							onSelected(event.xAxis[0].min, event.xAxis[0].max);
						} else {
							alert("blah");
						}
					}
				}
			},
			plotOptions : {
				line : {
					marker : {
						enabled : true
					}
				},
				column : {
					pointWidth : 3,
					enableMouseTracking : true
				},
				series : {
					cropThreshold : 1000000,
					turboThreshold : 1000000,
					stickyTracking : true,
					allowPointSelect : true,
					marker : {
						enabled : true
					},
					cursor : ''
				},
				dataGrouping : {
					enabled : false
				}
			},
			rangeSelector : {
				selected : 2,
				buttons : [{
					type : 'day',
					count : 1,
					text : '1d'
				}, {
					type : 'day',
					count : 3,
					text : '3d'
				}, {
					type : 'week',
					count : 1,
					text : '1w'
				}, {
					type : 'month',
					count : 1,
					text : '1m'
				}, {
					type : 'month',
					count : 3,
					text : '3m'
				}, {
					type : 'year',
					count : 1,
					text : '1y'
				}, {
					type : 'all',
					text : 'All'
				}]
			},
			xAxis : {
				timestamps : [],
				maxZoom : 14 * 3600000, //14 hours
				plotLines : []
			},
			tooltip : {
				crosshairs : [{
					width : 2
				}, {
					width : 2
				}],
				shared : true,
				formatter : function() {
					var s = '<b>' + Highcharts.dateFormat('%A, %b %e, %Y </b><br/><b>%l:%M:%S %p', this.x) + '</b>';

					$.each(this.points, function(i, point) {
						if(point.text !== undefined) {
							s += '<br/>' + point.text;
						} else {
							s += '<br/>' + point.series.name + ' = ' + point.y;
						}
					});
					return s;
				}
			},

			series : []
		};

		var bgOptions = {
			chart : {
				renderTo : 'bgGraph'
			},
			title : {
				text : 'Ashish\'s Blood Sugars'
			},
			yAxis : [{
				title : {
					text : 'mg/dl'
				},
				height : 200,
				lineWidth : 2,
				plotBands : [{
					from : 75,
					to : 170,
					color : '#00CC99'
				}, {
					from : 170,
					to : 1000,
					color : '#FF6699'
				}, {
					from : 0,
					to : 75,
					color : '#FF6600'
				}]
			}, {
				title : {
					text : 'bolus units'
				},
				top : 280,
				height : 80,
				offset : 0,
				lineWidth : 2,
				min : 0
			}, {
				title : {
					text : 'grams'
				},
				top : 380,
				height : 80,
				offset : 0,
				lineWidth : 2,
				min : 0
			}, {
				title : {
					text : 'basal units'
				},
				top : 480,
				height : 80,
				offset : 0,
				lineWidth : 2,
				min : 0,
				opposite : false
			}]
		};
		bgOptions = jQuery.extend(true, {}, options, bgOptions);

		var bgseries = {
			name : 'BG',
			data : [],
			type : 'scatter',
			yAxis : 0
		};

		var insulinSeries = {
			name : 'Bolus',
			data : [],
			type : 'column',
			yAxis : 1,
			step : true
		};

		var basalSeries = {
			name : 'Basal',
			data : [],
			type : 'area',
			yAxis : 3,
			step : true,
			id : 'basalSeries'
		};

		var podSeries = {
			type : 'flags',
			data : [],
			shape : 'circlepin',
			title : 'pod',
			width : 26,
			name : 'Pods',
			onSeries : 'basalSeries',
			yAxis : 3
		};

		var foodSeries = {
			name : 'Carbs',
			data : [],
			type : 'column',
			yAxis : 2,
			step : true
		};

		var done = 0;
		var urls = ['bg', 'basal', 'bolus', 'food', 'pump'];
		var results = {};

		$.each(urls, function(index) {
			$.getJSON('http://0.0.0.0:3000/events/' + urls[index] + '.json', function(response) {
				results[index] = response; ++done;

				if(done == urls.length) {
					bgseries.data = results[0];
					insulinSeries.data = results[2];
					basalSeries.data = results[1];
					podSeries.data = results[4];
					foodSeries.data = results[3];

					bgOptions.series = [bgseries, insulinSeries, basalSeries, podSeries, foodSeries];
					bgChart = new Highcharts.StockChart(bgOptions);
				}
			});
		});
	});

</script>
<div id="bgGraph" style="width: 70%; height: 625px; align: left; float:left"></div>
<div id="selectedReport" style="width: 30%; height: 625px; align: left; float:left; overflow-y: scroll">
	<table id="reportTable">
		<tbody>
			<tr colspan=2>
				<td><b>Events</b></td>
			</tr>
		</tbody>
	</table>
</div>
